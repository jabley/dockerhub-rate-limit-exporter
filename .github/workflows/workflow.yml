# This is a basic workflow to help you get started with Actions

name: CICD

# Controls when the action will run.
on: [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The "build" workflow
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    # Setup Go
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.15.0' # The Go version to download (if necessary) and use.
    
    # Install all the dependencies
    - name: Install dependencies
      run: |
        go version
        go get -u golang.org/x/lint/golint
        go mod download
        go mod verify
        
    # Run build of the application
    - name: Run build
      run: go build . 
      
    # Run vet & lint on the code
    - name: Run vet & lint
      run: |
        go vet .
        golint .
    
    # Run testing on the code
    - name: Run testing
      run: go test -coverprofile=test.cover .
    
    - name: Publish code coverage
      uses: paambaati/codeclimate-action@v2.7.4
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_TEST_REPORTER_ID }}
      with:
        coverageLocations: |
          ${{github.workspace}}/*.cover:gocov
    
  # The "deploy" workflow
  buildx:
    runs-on: ubuntu-latest
    needs: [build] # Only run this workflow when "build" workflow succeeds
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

    # Deploy to Docker registry
    # - name: Deploy to Docker registry
    #   uses: docker/build-push-action@v2
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    #     repository: jabley/dockerhub_exporter
    #     tag_with_ref: true
